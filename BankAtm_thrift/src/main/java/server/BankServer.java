package server;


import org.apache.thrift.server.TServer;
import org.apache.thrift.server.TSimpleServer;
import org.apache.thrift.server.TThreadPoolServer;
import org.apache.thrift.transport.TServerSocket;
import org.apache.thrift.transport.TServerTransport;
import server.thrift.BankAppService;

public class BankServer {
    public static BankServerImplementation bankServerImplementation;
    public static BankAppService.Processor processor;

    public static void main(String[] args) {
        try {

            bankServerImplementation = new BankServerImplementation();

            // Connect autogenerated BankAppService from apache thrift
            processor = new BankAppService.Processor(bankServerImplementation);


            // Create a Runnable server thread and run it
            Runnable simple = new Runnable() {
                public void run() {
                    simple(processor);
                }
            };
            new Thread(simple).start();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Main function that runs on each thread
    public static void simple(BankAppService.Processor processor) {
        try {
            // Create socket on port 9090
            TServerTransport serverTransport = new TServerSocket(9090);

            // create a new server based on the port
            TServer server = new TSimpleServer(new TServer.Args(serverTransport).processor(processor));

            // start the server
            System.out.println("Starting the simple server...");
            server.serve();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
